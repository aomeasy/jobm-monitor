name: Job Management Automation

on:
  schedule:
    - cron: '0 * * * 1-5'   # ทุกชั่วโมง จ.-ศ. (UTC)
  workflow_dispatch: 

jobs:
  fetch-jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # ↓↓↓ ตัวนี้เท่านั้นสำหรับ Chrome/Chromedriver (อย่าใช้ wget/URL เก่าแล้ว)
      - name: Setup Chrome
        id: chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-chromedriver: true

      - name: Show Chrome info
        run: |
          echo "Chrome: ${{ steps.chrome.outputs.chrome-path }}"
          echo "Driver: ${{ steps.chrome.outputs.chromedriver-path }}"
          ${{ steps.chrome.outputs.chrome-path }} --version
          ${{ steps.chrome.outputs.chromedriver-path }} --version

      - name: Install system deps for headless (Ubuntu 24.04/Noble)
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            xvfb \
            libnss3 \
            libxss1 \
            libgbm1 \
            libgtk-3-0 \
            libxshmfence1 \
            libdrm2 \
            libx11-6 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libglib2.0-0 \
            libgdk-pixbuf2.0-0 \
            fonts-liberation \
            xdg-utils \
            ca-certificates \
            libasound2t64


      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Google Service Account credentials (auto-detect raw/base64)
        shell: bash
        run: |
          set -euo pipefail
          # 1) ดึงค่ามาเก็บชั่วคราว
          TMP_SECRETS="$(mktemp)"
          printf '%s' "${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}" > "$TMP_SECRETS"
      
          # 2) ฟังก์ชันเช็คว่าเป็น JSON ตรง ๆ ไหม
          is_json() {
            python - "$TMP_SECRETS" <<'PY' || exit 1
      import json,sys,Pathlib,io,os
      p=sys.argv[1]
      s=open(p,'r',encoding='utf-8').read()
      try:
          json.loads(s)
          print("RAW_JSON_OK")
      except Exception:
          print("RAW_JSON_FAIL")
      PY
          }
      
          # 3) ฟังก์ชันลอง base64 → JSON
          try_b64() {
            B64D="$(mktemp)"
            # -d ถ้า decode ไม่ได้ให้ล้ม
            base64 -d "$TMP_SECRETS" > "$B64D" 2>/dev/null || return 1
            python - "$B64D" <<'PY' || exit 1
      import json,sys
      s=open(sys.argv[1],'r',encoding='utf-8').read()
      json.loads(s)
      print("B64_JSON_OK")
      PY
            mv "$B64D" credentials.json
            return 0
          }
      
          # 4) ตัดสินใจ
          if grep -q '[^[:space:]]' "$TMP_SECRETS"; then
            if [ "$(is_json || true)" = "RAW_JSON_OK" ]; then
              cp "$TMP_SECRETS" credentials.json
              echo "✅ credentials.json written from RAW JSON"
            elif try_b64; then
              echo "✅ credentials.json written from BASE64"
            else
              echo "❌ Secret is neither valid JSON nor valid base64 JSON."
              echo "   - ถ้าเก็บเป็น base64: ให้แน่ใจว่า encode ด้วย: base64 -w0 service-account.json"
              echo "   - ถ้าเก็บเป็น JSON ดิบ: วางค่าแบบไม่ใส่เครื่องหมายคำพูดซ้อนอีกชั้น"
              exit 1
            fi
          else
            echo "❌ Secret GOOGLE_SERVICE_ACCOUNT_JSON is empty for this workflow run."
            exit 1
          fi
      
          # 5) ตรวจซ้ำให้ชัวร์
          python - <<'PY'
      import json, pathlib
      p=pathlib.Path("credentials.json")
      data=p.read_text(encoding="utf-8")
      json.loads(data)
      print("✅ credentials.json validated")
      PY


      - name: Run job fetcher
        env:
          CHROME_BIN: ${{ steps.chrome.outputs.chrome-path }}
          CHROMEDRIVER: ${{ steps.chrome.outputs.chromedriver-path }}
          GOOGLE_SHEET_URL: ${{ vars.GOOGLE_SHEET_URL || 'https://docs.google.com/spreadsheets/d/1uEbsT3PZ8tdwiU1Xga_hS6uPve2H74xD5wUci0EcT0Q/edit?gid=0#gid=0' }}
          GOOGLE_SHEET_NAME: ${{ vars.GOOGLE_SHEET_NAME || 'ชีต1' }}
        run: python job_fetcher.py

      - name: Clean up credentials
        if: always()
        run: rm -f credentials.json
